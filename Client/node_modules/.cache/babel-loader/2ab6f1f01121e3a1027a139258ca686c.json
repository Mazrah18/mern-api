{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parth\\\\OneDrive\\\\Desktop\\\\React Project6\\\\Complete-React-Tutorial-lesson-32\\\\dojo-blog\\\\src\\\\recipes.js\",\n  _s = $RefreshSig$();\nimport BlogList from \"./BlogList\";\nimport { useState } from \"react\";\nimport useFetch from \"./useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recipes = () => {\n  _s();\n  const {\n    error,\n    isPending,\n    data: food\n  } = useFetch('http://localhost:5000/recipes');\n  console.log(food);\n  const [searchTerm, setSearchTerm] = useState('');\n  // Ensure that 'food' is not null before filtering\n  const filteredBlogs = food ? food.filter(blog => blog.title.toLowerCase().includes(searchTerm.toLowerCase())) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \" Food Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search recipes...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this), food && /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: filteredBlogs,\n      category: \"recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this), food && /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: food,\n      category: \"recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Recipes, \"n2gZU6RUdxAZtOqHTyDfRvIP5cI=\", false, function () {\n  return [useFetch];\n});\n_c = Recipes;\nexport default Recipes;\n\n// import React, { useState } from 'react';\n// import BlogList from './BlogList';\n// import useFetch from './useFetch';\n\n// const Recipes = () => {\n//   const { error, isPending, data: food } = useFetch('http://localhost:5000/recipes');\n//   const [searchTerm, setSearchTerm] = useState('');\n//   console.log(food); // Add this line to check the value of 'data'\n// const filteredBlogs = food.filter(blog =>\n//   blog.title.toLowerCase().includes(searchTerm.toLowerCase())\n// );\n\n//   return (\n//     <div className=\"home\">\n//       <h1 style={{ textAlign: 'center' }}> Food Recipes</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search recipes...\"\n//         value={searchTerm}\n//         onChange={e => setSearchTerm(e.target.value)}\n//       />\n//       {error && <div>{error}</div>}\n//       {isPending && <div>Loading...</div>}\n//       {food && <BlogList blogs={filteredBlogs} category=\"recipes\" />}\n//     </div>\n//   );\n// };\n\n// export default Recipes;\nvar _c;\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"names":["BlogList","useState","useFetch","jsxDEV","_jsxDEV","Recipes","_s","error","isPending","data","food","console","log","searchTerm","setSearchTerm","filteredBlogs","filter","blog","title","toLowerCase","includes","className","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","blogs","category","_c","$RefreshReg$"],"sources":["C:/Users/parth/OneDrive/Desktop/React Project6/Complete-React-Tutorial-lesson-32/dojo-blog/src/recipes.js"],"sourcesContent":["\r\nimport BlogList from \"./BlogList\";\r\nimport { useState } from \"react\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Recipes = () => {\r\n  const { error, isPending, data: food } = useFetch('http://localhost:5000/recipes');\r\n  console.log(food);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n   // Ensure that 'food' is not null before filtering\r\n   const filteredBlogs = food\r\n   ? food.filter(blog =>\r\n       blog.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n     )\r\n   : [];\r\n  return (\r\n    <div className=\"home\">\r\n      <h1 style={{ textAlign: 'center' }}> Food Recipes</h1>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search recipes...\"\r\n        value={searchTerm}\r\n        onChange={e => setSearchTerm(e.target.value)}\r\n      />\r\n      {error && <div>{error}</div>}\r\n      {isPending && <div>Loading...</div>}\r\n\r\n      {food && <BlogList blogs={filteredBlogs} category=\"recipes\" />}\r\n      {food && <BlogList blogs={food} category=\"recipes\" />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recipes;\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import BlogList from './BlogList';\r\n// import useFetch from './useFetch';\r\n\r\n// const Recipes = () => {\r\n//   const { error, isPending, data: food } = useFetch('http://localhost:5000/recipes');\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   console.log(food); // Add this line to check the value of 'data'\r\n  // const filteredBlogs = food.filter(blog =>\r\n  //   blog.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  // );\r\n\r\n//   return (\r\n//     <div className=\"home\">\r\n//       <h1 style={{ textAlign: 'center' }}> Food Recipes</h1>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Search recipes...\"\r\n//         value={searchTerm}\r\n//         onChange={e => setSearchTerm(e.target.value)}\r\n//       />\r\n//       {error && <div>{error}</div>}\r\n//       {isPending && <div>Loading...</div>}\r\n//       {food && <BlogList blogs={filteredBlogs} category=\"recipes\" />}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Recipes;\r\n"],"mappings":";;AACA,OAAOA,QAAQ,MAAM,YAAY;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC,KAAK;IAAEC,SAAS;IAAEC,IAAI,EAAEC;EAAK,CAAC,GAAGR,QAAQ,CAAC,+BAA+B,CAAC;EAClFS,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC/C;EACA,MAAMc,aAAa,GAAGL,IAAI,GACxBA,IAAI,CAACM,MAAM,CAACC,IAAI,IACdA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,UAAU,CAACM,WAAW,CAAC,CAAC,CAC5D,CAAC,GACD,EAAE;EACL,oBACEf,OAAA;IAAKiB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBlB,OAAA;MAAImB,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,EAAC;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEtDxB,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,mBAAmB;MAC/BC,KAAK,EAAElB,UAAW;MAClBmB,QAAQ,EAAEC,CAAC,IAAInB,aAAa,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,EACDrB,KAAK,iBAAIH,OAAA;MAAAkB,QAAA,EAAMf;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC3BpB,SAAS,iBAAIJ,OAAA;MAAAkB,QAAA,EAAK;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAElClB,IAAI,iBAAIN,OAAA,CAACJ,QAAQ;MAACmC,KAAK,EAAEpB,aAAc;MAACqB,QAAQ,EAAC;IAAS;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7DlB,IAAI,iBAAIN,OAAA,CAACJ,QAAQ;MAACmC,KAAK,EAAEzB,IAAK;MAAC0B,QAAQ,EAAC;IAAS;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAAAtB,EAAA,CA3BKD,OAAO;EAAA,QAC8BH,QAAQ;AAAA;AAAAmC,EAAA,GAD7ChC,OAAO;AA6Bb,eAAeA,OAAO;;AAKtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACE;AACA;AACA;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}
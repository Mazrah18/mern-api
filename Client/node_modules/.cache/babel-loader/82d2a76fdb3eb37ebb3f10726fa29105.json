{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parth\\\\OneDrive\\\\Desktop\\\\React Project6\\\\Complete-React-Tutorial-lesson-32\\\\BlogNest\\\\src\\\\FilteredBlogs.js\";\n// import React, { useState } from 'react';\n// import useFetch from './useFetch';\n// import BlogList from './BlogList';\n\n// const FilteredBlogs = ({ category }) => {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const { error, isPending, data: blogs } = useFetch(`http://localhost:5000/${category}`);\n\n//   const filteredBlogs = blogs \n//     ? blogs.filter(blog =>\n//       blog.title.toLowerCase().includes(searchTerm.toLowerCase())\n//     ) : [];\n\n//   return (\n//     <div className=\"filtered-blogs\">\n//       <div className=\"search-container\" style={{ alignContent: 'center'}}>\n//         <input\n//           className=\"search-input\"\n//           type=\"text\"\n//           placeholder={`Search ${category}...`}\n//           value={searchTerm}\n//           onChange={e => setSearchTerm(e.target.value)}\n//         />\n//       </div>\n//       {error && <div>{error}</div>}\n//       {isPending && <div>Loading...</div>}\n//       {blogs && <BlogList blogs={filteredBlogs} category={category} />}\n//     </div>\n//   );\n// };\n\n// export default FilteredBlogs;\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogList = ({\n  blogs,\n  category\n}) => {\n  if (blogs.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"blog-list\",\n      children: [\"No \", category === 'blogs' ? '' : category, \" blogs found.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-list-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-list\",\n      children: blogs.map(blog => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/${category}/${blog._id}`,\n        className: \"blog-link\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blog-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"blog-title\",\n            children: blog.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"blog-author\",\n            children: [\"Written by \", blog.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, blog._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = BlogList;\nexport default BlogList;\nvar _c;\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","BlogList","blogs","category","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","blog","to","_id","title","author","_c","$RefreshReg$"],"sources":["C:/Users/parth/OneDrive/Desktop/React Project6/Complete-React-Tutorial-lesson-32/BlogNest/src/FilteredBlogs.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import useFetch from './useFetch';\r\n// import BlogList from './BlogList';\r\n\r\n\r\n// const FilteredBlogs = ({ category }) => {\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const { error, isPending, data: blogs } = useFetch(`http://localhost:5000/${category}`);\r\n\r\n//   const filteredBlogs = blogs \r\n//     ? blogs.filter(blog =>\r\n//       blog.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n//     ) : [];\r\n\r\n//   return (\r\n//     <div className=\"filtered-blogs\">\r\n//       <div className=\"search-container\" style={{ alignContent: 'center'}}>\r\n//         <input\r\n//           className=\"search-input\"\r\n//           type=\"text\"\r\n//           placeholder={`Search ${category}...`}\r\n//           value={searchTerm}\r\n//           onChange={e => setSearchTerm(e.target.value)}\r\n//         />\r\n//       </div>\r\n//       {error && <div>{error}</div>}\r\n//       {isPending && <div>Loading...</div>}\r\n//       {blogs && <BlogList blogs={filteredBlogs} category={category} />}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FilteredBlogs;\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst BlogList = ({ blogs, category }) => {\r\n  if (blogs.length === 0) {\r\n    return <p className=\"blog-list\">No {category === 'blogs' ? '' : category} blogs found.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"blog-list-container\">\r\n      <div className=\"blog-list\">\r\n        {blogs.map(blog => (\r\n          <Link to={`/${category}/${blog._id}`} className=\"blog-link\" key={blog._id}>\r\n            <div className=\"blog-preview\">\r\n              <h2 className=\"blog-title\">{blog.title}</h2>\r\n              <p className=\"blog-author\">Written by {blog.author}</p>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlogList;\r\n"],"mappings":";AAAA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACxC,IAAID,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;IACtB,oBAAOJ,OAAA;MAAGK,SAAS,EAAC,WAAW;MAAAC,QAAA,GAAC,KAAG,EAACH,QAAQ,KAAK,OAAO,GAAG,EAAE,GAAGA,QAAQ,EAAC,eAAa;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC5F;EAEA,oBACEV,OAAA;IAAKK,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClCN,OAAA;MAAKK,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBJ,KAAK,CAACS,GAAG,CAACC,IAAI,iBACbZ,OAAA,CAACF,IAAI;QAACe,EAAE,EAAG,IAAGV,QAAS,IAAGS,IAAI,CAACE,GAAI,EAAE;QAACT,SAAS,EAAC,WAAW;QAAAC,QAAA,eACzDN,OAAA;UAAKK,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BN,OAAA;YAAIK,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEM,IAAI,CAACG;UAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5CV,OAAA;YAAGK,SAAS,EAAC,aAAa;YAAAC,QAAA,GAAC,aAAW,EAACM,IAAI,CAACI,MAAM;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD;MAAC,GAJyDE,IAAI,CAACE,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKnE,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAO,EAAA,GAnBKhB,QAAQ;AAqBd,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}
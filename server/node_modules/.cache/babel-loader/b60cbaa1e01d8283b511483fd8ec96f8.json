{"ast":null,"code":"import Navbar from './Navbar';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\nimport Recipes from './recipes';\nimport Tech from './Tech';\nimport Travel from './Travel';\nimport Lifestyle from './Lifestyle';\n\n// function App() {\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Navbar />\n//         <div className=\"content\">\n//           <Switch>\n//             <Route exact path=\"/\">\n//               <Home />\n//             </Route>\n//             <Route path=\"/recipes\">\n//               <Recipes/>\n//             </Route>\n//             <Route path=\"/tech\">\n//               <Tech />\n//             </Route>\n//             <Route path=\"/travel\">\n//               <Travel />\n//             </Route>\n//             <Route path=\"/lifestyle\">\n//               <Lifestyle/>\n//             </Route>\n//             <Route path=\"/create\">\n//               <Create />\n//             </Route>\n//             <Route path=\"/blogs/:id\">\n//               <BlogDetails />\n//             </Route>\n//             <Route path=\"*\">\n//               <NotFound />\n//             </Route>\n//           </Switch>\n//         </div>\n//       </div>\n//     </Router>\n//   );\n// }\n\nconst express = require('express');\nconst morgan = require('morgan');\nconst mongoose = require('mongoose');\nconst blogRoutes = require('./routes/blogRoutes');\n\n// express app\nconst app = express();\n\n// connect to mongodb & listen for requests\nconst dbURI = \"mongodb+srv://admin:12344321@node-tuts.vmwec9m.mongodb.net/node-tuts?retryWrites=true&w=majority\";\nmongoose.connect(dbURI, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(result => app.listen(3000)).catch(err => console.log(err));\n\n// register view engine\napp.set('view engine', 'ejs');\n\n// middleware & static files\napp.use(express.static('public'));\napp.use(express.urlencoded({\n  extended: true\n}));\napp.use(morgan('dev'));\napp.use((req, res, next) => {\n  res.locals.path = req.path;\n  next();\n});\n\n// routes\napp.get('/', (req, res) => {\n  res.redirect('/blogs');\n});\napp.get('/about', (req, res) => {\n  res.render('about', {\n    title: 'About'\n  });\n});\n\n// blog routes\napp.use('/blogs', blogRoutes);\n\n// 404 page\napp.use((req, res) => {\n  res.status(404).render('404', {\n    title: '404'\n  });\n});\nexport default App;","map":{"version":3,"names":["Navbar","Home","BrowserRouter","Router","Route","Switch","Create","BlogDetails","NotFound","Recipes","Tech","Travel","Lifestyle","express","require","morgan","mongoose","blogRoutes","app","dbURI","connect","useNewUrlParser","useUnifiedTopology","then","result","listen","catch","err","console","log","set","use","static","urlencoded","extended","req","res","next","locals","path","get","redirect","render","title","status","App"],"sources":["C:/Users/parth/OneDrive/Desktop/React Project6/Complete-React-Tutorial-lesson-32/dojo-blog/src/App.js"],"sourcesContent":["import Navbar from './Navbar';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\nimport Recipes from './recipes';\nimport Tech from './Tech';\nimport Travel from './Travel';\nimport Lifestyle from './Lifestyle';\n\n// function App() {\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Navbar />\n//         <div className=\"content\">\n//           <Switch>\n//             <Route exact path=\"/\">\n//               <Home />\n//             </Route>\n//             <Route path=\"/recipes\">\n//               <Recipes/>\n//             </Route>\n//             <Route path=\"/tech\">\n//               <Tech />\n//             </Route>\n//             <Route path=\"/travel\">\n//               <Travel />\n//             </Route>\n//             <Route path=\"/lifestyle\">\n//               <Lifestyle/>\n//             </Route>\n//             <Route path=\"/create\">\n//               <Create />\n//             </Route>\n//             <Route path=\"/blogs/:id\">\n//               <BlogDetails />\n//             </Route>\n//             <Route path=\"*\">\n//               <NotFound />\n//             </Route>\n//           </Switch>\n//         </div>\n//       </div>\n//     </Router>\n//   );\n// }\n\n\n\nconst express = require('express');\nconst morgan = require('morgan');\nconst mongoose = require('mongoose');\nconst blogRoutes = require('./routes/blogRoutes');\n\n// express app\nconst app = express();\n\n// connect to mongodb & listen for requests\nconst dbURI = \"mongodb+srv://admin:12344321@node-tuts.vmwec9m.mongodb.net/node-tuts?retryWrites=true&w=majority\";\n\n\nmongoose.connect(dbURI, { useNewUrlParser: true, useUnifiedTopology: true })\n  .then(result => app.listen(3000))\n  .catch(err => console.log(err));\n\n// register view engine\napp.set('view engine', 'ejs');\n\n// middleware & static files\napp.use(express.static('public'));\napp.use(express.urlencoded({ extended: true }));\napp.use(morgan('dev'));\napp.use((req, res, next) => {\n  res.locals.path = req.path;\n  next();\n});\n\n// routes\napp.get('/', (req, res) => {\n  res.redirect('/blogs');\n});\n\napp.get('/about', (req, res) => {\n  res.render('about', { title: 'About' });\n});\n\n// blog routes\napp.use('/blogs', blogRoutes);\n\n// 404 page\napp.use((req, res) => {\n  res.status(404).render('404', { title: '404' });\n});\n\n\nexport default App;"],"mappings":"AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,SAAS,MAAM,aAAa;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAME,QAAQ,GAAGF,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMG,UAAU,GAAGH,OAAO,CAAC,qBAAqB,CAAC;;AAEjD;AACA,MAAMI,GAAG,GAAGL,OAAO,CAAC,CAAC;;AAErB;AACA,MAAMM,KAAK,GAAG,kGAAkG;AAGhHH,QAAQ,CAACI,OAAO,CAACD,KAAK,EAAE;EAAEE,eAAe,EAAE,IAAI;EAAEC,kBAAkB,EAAE;AAAK,CAAC,CAAC,CACzEC,IAAI,CAACC,MAAM,IAAIN,GAAG,CAACO,MAAM,CAAC,IAAI,CAAC,CAAC,CAChCC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;;AAEjC;AACAT,GAAG,CAACY,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC;;AAE7B;AACAZ,GAAG,CAACa,GAAG,CAAClB,OAAO,CAACmB,MAAM,CAAC,QAAQ,CAAC,CAAC;AACjCd,GAAG,CAACa,GAAG,CAAClB,OAAO,CAACoB,UAAU,CAAC;EAAEC,QAAQ,EAAE;AAAK,CAAC,CAAC,CAAC;AAC/ChB,GAAG,CAACa,GAAG,CAAChB,MAAM,CAAC,KAAK,CAAC,CAAC;AACtBG,GAAG,CAACa,GAAG,CAAC,CAACI,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAC1BD,GAAG,CAACE,MAAM,CAACC,IAAI,GAAGJ,GAAG,CAACI,IAAI;EAC1BF,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;;AAEF;AACAnB,GAAG,CAACsB,GAAG,CAAC,GAAG,EAAE,CAACL,GAAG,EAAEC,GAAG,KAAK;EACzBA,GAAG,CAACK,QAAQ,CAAC,QAAQ,CAAC;AACxB,CAAC,CAAC;AAEFvB,GAAG,CAACsB,GAAG,CAAC,QAAQ,EAAE,CAACL,GAAG,EAAEC,GAAG,KAAK;EAC9BA,GAAG,CAACM,MAAM,CAAC,OAAO,EAAE;IAAEC,KAAK,EAAE;EAAQ,CAAC,CAAC;AACzC,CAAC,CAAC;;AAEF;AACAzB,GAAG,CAACa,GAAG,CAAC,QAAQ,EAAEd,UAAU,CAAC;;AAE7B;AACAC,GAAG,CAACa,GAAG,CAAC,CAACI,GAAG,EAAEC,GAAG,KAAK;EACpBA,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACF,MAAM,CAAC,KAAK,EAAE;IAAEC,KAAK,EAAE;EAAM,CAAC,CAAC;AACjD,CAAC,CAAC;AAGF,eAAeE,GAAG"},"metadata":{},"sourceType":"module"}
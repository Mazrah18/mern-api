{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parth\\\\OneDrive\\\\Desktop\\\\React Project6\\\\Complete-React-Tutorial-lesson-32\\\\dojo-blog\\\\src\\\\recipes.js\";\n// import BlogList from \"./BlogList\";\n// import { useState } from \"react\";\n// import useFetch from \"./useFetch\";\n\n// const Recipes = () => {\n//   const { error, isPending, data: food } = useFetch('http://localhost:5000/recipes');\n//   console.log(food);\n//   const [searchTerm, setSearchTerm] = useState('');\n//    // Ensure that 'food' is not null before filtering\n//    const filteredBlogs = food\n//    ? food.filter(blog =>\n//        blog.title.toLowerCase().includes(searchTerm.toLowerCase())\n//      )\n//    : [];\n//   return (\n//     <div className=\"home\">\n//       <h1 style={{ textAlign: 'center' }}> Food Recipes</h1>\n\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search recipes...\"\n//         value={searchTerm}\n//         onChange={e => setSearchTerm(e.target.value)}\n//       />\n//       {error && <div>{error}</div>}\n//       {isPending && <div>Loading...</div>}\n\n//       {food && <BlogList blogs={filteredBlogs} category=\"recipes\" />}\n\n//     </div>\n//   );\n// }\n\n// export default Recipes;\n\n// // import React, { useState } from 'react';\n// // import BlogList from './BlogList';\n// // import useFetch from './useFetch';\n\n// // const Recipes = () => {\n// //   const { error, isPending, data: food } = useFetch('http://localhost:5000/recipes');\n// //   const [searchTerm, setSearchTerm] = useState('');\n// //   console.log(food); // Add this line to check the value of 'data'\n//   // const filteredBlogs = food.filter(blog =>\n//   //   blog.title.toLowerCase().includes(searchTerm.toLowerCase())\n//   // );\n\n// //   return (\n// //     <div className=\"home\">\n// //       <h1 style={{ textAlign: 'center' }}> Food Recipes</h1>\n// //       <input\n// //         type=\"text\"\n// //         placeholder=\"Search recipes...\"\n// //         value={searchTerm}\n// //         onChange={e => setSearchTerm(e.target.value)}\n// //       />\n// //       {error && <div>{error}</div>}\n// //       {isPending && <div>Loading...</div>}\n// //       {food && <BlogList blogs={filteredBlogs} category=\"recipes\" />}\n// //     </div>\n// //   );\n// // };\n\n// // export default Recipes;\n\nimport React from 'react';\nimport FilteredBlogs from './FilteredBlogs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recipes = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \" Food Recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilteredBlogs, {\n      category: \"recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_c = Recipes;\nexport default Recipes;\nvar _c;\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"names":["React","FilteredBlogs","jsxDEV","_jsxDEV","Recipes","className","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","category","_c","$RefreshReg$"],"sources":["C:/Users/parth/OneDrive/Desktop/React Project6/Complete-React-Tutorial-lesson-32/dojo-blog/src/recipes.js"],"sourcesContent":["\r\n// import BlogList from \"./BlogList\";\r\n// import { useState } from \"react\";\r\n// import useFetch from \"./useFetch\";\r\n\r\n// const Recipes = () => {\r\n//   const { error, isPending, data: food } = useFetch('http://localhost:5000/recipes');\r\n//   console.log(food);\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//    // Ensure that 'food' is not null before filtering\r\n//    const filteredBlogs = food\r\n//    ? food.filter(blog =>\r\n//        blog.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n//      )\r\n//    : [];\r\n//   return (\r\n//     <div className=\"home\">\r\n//       <h1 style={{ textAlign: 'center' }}> Food Recipes</h1>\r\n\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Search recipes...\"\r\n//         value={searchTerm}\r\n//         onChange={e => setSearchTerm(e.target.value)}\r\n//       />\r\n//       {error && <div>{error}</div>}\r\n//       {isPending && <div>Loading...</div>}\r\n\r\n//       {food && <BlogList blogs={filteredBlogs} category=\"recipes\" />}\r\n\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Recipes;\r\n\r\n\r\n\r\n\r\n// // import React, { useState } from 'react';\r\n// // import BlogList from './BlogList';\r\n// // import useFetch from './useFetch';\r\n\r\n// // const Recipes = () => {\r\n// //   const { error, isPending, data: food } = useFetch('http://localhost:5000/recipes');\r\n// //   const [searchTerm, setSearchTerm] = useState('');\r\n// //   console.log(food); // Add this line to check the value of 'data'\r\n//   // const filteredBlogs = food.filter(blog =>\r\n//   //   blog.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n//   // );\r\n\r\n// //   return (\r\n// //     <div className=\"home\">\r\n// //       <h1 style={{ textAlign: 'center' }}> Food Recipes</h1>\r\n// //       <input\r\n// //         type=\"text\"\r\n// //         placeholder=\"Search recipes...\"\r\n// //         value={searchTerm}\r\n// //         onChange={e => setSearchTerm(e.target.value)}\r\n// //       />\r\n// //       {error && <div>{error}</div>}\r\n// //       {isPending && <div>Loading...</div>}\r\n// //       {food && <BlogList blogs={filteredBlogs} category=\"recipes\" />}\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Recipes;\r\n\r\nimport React from 'react';\r\nimport FilteredBlogs from './FilteredBlogs';\r\n\r\nconst Recipes = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <h1 style={{ textAlign: 'center' }}> Food Recipes</h1>\r\n      <FilteredBlogs category=\"recipes\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipes;\r\n"],"mappings":";AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,oBACED,OAAA;IAAKE,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBH,OAAA;MAAII,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,EAAC;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtDT,OAAA,CAACF,aAAa;MAACY,QAAQ,EAAC;IAAS;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACE,EAAA,GAPIV,OAAO;AASb,eAAeA,OAAO;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}